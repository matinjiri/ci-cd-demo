name: CI and CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  cd:
    needs: ci
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker login
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.REGISTRY_URL }}/myapp:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.REGISTRY_URL }}/myapp:latest

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: docker-compose.yml
          target: /home/${{ secrets.SERVER_USER }}/app/docker-compose.yml

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          debug: true
          script: |
            # Login to private registry on server
            echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin

            # Pull the latest image
            docker pull ${{ secrets.REGISTRY_URL }}/myapp:latest

            # Stop old containers and start new ones
            docker-compose -f /home/${{ secrets.SERVER_USER }}/app/docker-compose.yml down
            docker-compose -f /home/${{ secrets.SERVER_USER }}/app/docker-compose.yml up -d
